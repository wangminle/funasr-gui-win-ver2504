# 项目整体原则
## 目录结构
1. 主项目目录是/funasr-python-gui-client-v2，主项目目录中包含/dev、/src、/docs、/tests和/ref五个目录；
2. 开发任务使用的目录是/src目录，
3. 开发过程中临时使用的配置和结果使用/dev目录存储，主要包括/config、/logs和/output三个主要目录；
4. 所有代码都放在/src目录中；所有代码都使用中文注释；
5. 如果开发过程中有任何需要输出到本地文件的，都输出到/dev/output目录中；
5. 如果有任何日志要记录在本地，都记录到/dev/logs目录中；
6. 如果需要有任何本地配置文件，都放在/dev/config目录中；
7. 所有项目进行过程中撰写的文档，都放入/docs目录中；这个目录中的所有文档，都使用markdown格式；
8. 所有测试脚本，测试临时数据，测试方案和测试总结文档都放入/tests目录中；
9. 所有参考代码和文档都放入/ref目录中；这个目录中的文档不允许任何修改和调整；


## 文档管理
1. 项目需要有架构设计文档，架构设计文档要放在/docs目录中，架构设计文档使用markdown格式；
2. 项目需要有需求规格说明书，需求规格说明书要放在/docs目录中，需求规格说明书使用markdown格式；
3. 项目需要有UI设计说明文档，UI设计说明文档要放在/docs目录中，UI设计说明文档使用markdown格式；
4. 项目需要有项目管理（含开发计划）文档，要放在/docs目录中，项目管理文档使用markdown格式；
5. 本项目中架构设计文档，需求规格说明书，UI设计说明文档以及项目管理文档，这四个文档是重要文档，可以在文档前增加项目前缀："funasr-python-gui-client-v2-"。



## 任务管理
1. 所有开发都以项目管理文档中的开发计划为依据，每次开发时只专注于一个开发任务，完成一个开发任务后，再进行下一个开发任务。
2. 每次在做新的开发时，如果发现需要改动当前开发任务以外的代码时，先向用户提出你的修改意见，并等待用户批准；
3. 每次完成当前开发任务的代码输出后，都要执行文档中约定好的自我测试，并输出测试总结到/tests目录，等待用户最终批准；
4. 每次在获得批准开始新的代码开发时，都先评估过去3天的开发是否已完成测试流程，并有输出测试总结；
5. 每次完成2到3个开发任务后，都要更新项目管理文档；如果有变化，还要更新架构设计文档、需求规格说明书和UI设计说明文档。


## 公共资源获取
1. 如果需要使用当天日期的情形，请先用系统命令如date查询当前的真实时间和日期，再使用查询结果来命名或者描述；
2. 如果需要使用到本地文件路径的，请先使用系统命令如pwd查询当前的真实文件路径，再使用查询结果来命名或者描述。



## 项目基础信息
1. 项目的目标是制作一个基于python语言的桌面客户端工具，内置funasr引擎的ws通讯协议，实现语音识别功能，也支持速度测试。


## 开发环境 —— Python版
1. 项目整体使用python语言开发，python语言的版本为3.12；
2. 项目的设计和开发尽量使用官方提供的标准库实现，整体使用pipenv管理依赖；
3. 对于macOS系统，当使用python命令时，默认使用python3；对于Windows系统，当使用python命令时，默认使用python；
4. 代码风格：使用中文注释，类名使用驼峰命名，函数名使用下划线命名；
5. 代码检查与格式化：必须启用 black、isort、flake8和mypy强制执行。


## 测试标准
1. 每个开发任务完成后，必须编写对应的测试脚本放在/tests/scripts目录中；
2. 测试脚本必须包含正常功能测试、边界条件测试和异常情况测试；测试脚本必须具备注释，并使用中文注释；
3. 测试脚本编写完成后，必须立即执行测试，并根据测试结果判断测试进展，必要时调整测试脚本重新执行；
4. 测试完成后，必须生成测试总结文档，包含测试结果、发现的问题和解决方案；
5. 测试总结文档命名格式：test_[功能名称]_[日期].md，放在/tests/reports目录中。